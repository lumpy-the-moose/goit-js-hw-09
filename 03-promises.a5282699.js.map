{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAWF,SAASC,cAAc,aAClCE,EAAQH,SAASC,cAAc,kBAC/BG,EAAOJ,SAASC,cAAc,iBAC9BI,EAASL,SAASC,cAAc,mBAChCK,EAAeN,SAASC,cAAc,mBAE5CF,EAAKQ,iBAAiB,UAAU,SAAAC,G,OAAKA,EAAEC,gB,IAEvCH,EAAaC,iBAAiB,SAAS,WACrC,GAAMJ,EAAMO,OAAS,GAAKN,EAAKM,OAAS,GAAKL,EAAOK,MAAQ,EAA5D,CAIAR,EAASS,aAAa,YAAY,GAElC,IAAIC,EAAW,EAETC,EAAWC,YAAW,SAASC,IA2BvC,IAAuBC,EAAUC,EA1BzBL,GAAYP,EAAOK,SA0BJM,EAzBHJ,EAyBaK,GAzBFd,EAAMO,MAAQN,EAAKM,OAASE,EAAW,GA0B7D,IAAIM,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUO,MAAAN,IAEpBG,EAAO,CAAEJ,WAAUO,MAAAN,G,KA/BhBO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUU,EAAKD,EAALF,MACjB1B,EAAA8B,OAAOC,QAAQ,qBAAoCC,OAAfb,EAAS,QAAYa,OAANH,EAAM,MAAK,CAC5DI,cAAc,EACdC,cAAc,G,IAGjBC,OAAM,SAAAP,G,IAAGT,EAAQS,EAART,SAAUiB,EAAKR,EAALF,MAClB1B,EAAA8B,OAAOO,QAAQ,oBAAmCL,OAAfb,EAAS,QAAYa,OAANI,EAAM,MAAK,CAC3DH,cAAc,EACdC,cAAc,G,IAGpBnB,GAAY,EACZE,WAAWC,EAAGX,EAAKM,QAGjBE,EAAWP,EAAOK,QACpByB,cAActB,GACdd,EAAKqC,QACLlC,EAASmC,gBAAgB,Y,GAE1BlC,EAAMO,MA/BP,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst fieldset = document.querySelector('.fieldset');\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst submitButton = document.querySelector('[type=\"submit\"]');\n\nform.addEventListener('submit', e => e.preventDefault());\n\nsubmitButton.addEventListener('click', () => {\n  if (!(delay.value >= 0 && step.value >= 0 && amount.value > 0)) {\n    return;\n  }\n\n  fieldset.setAttribute('disabled', true);\n\n  let position = 1;\n\n  const interval = setTimeout(function f() {\n    if (position <= amount.value) {\n      createPromise(position, +delay.value + step.value * (position - 1))\n        .then(({ position, delay }) => {\n          Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n            clickToClose: true,\n            pauseOnHover: false,\n          });\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n            clickToClose: true,\n            pauseOnHover: false,\n          });\n        });\n      position += 1;\n      setTimeout(f, step.value);\n    }\n\n    if (position > amount.value) {\n      clearInterval(interval);\n      form.reset();\n      fieldset.removeAttribute('disabled');\n    }\n  }, delay.value);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$fieldset","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$submitButton","addEventListener","e","preventDefault","value","setAttribute","position1","interval","setTimeout","f","position","delay3","Promise","resolve","reject","Math","random","delay","then","param","delay1","Notify","success","concat","clickToClose","pauseOnHover","catch","delay2","failure","clearInterval","reset","removeAttribute"],"version":3,"file":"03-promises.a5282699.js.map"}